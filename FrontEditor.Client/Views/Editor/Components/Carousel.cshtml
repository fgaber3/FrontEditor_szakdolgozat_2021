@using FrontEditor.Client.Models.EditorModels
@model EditorCarouselViewModel

<div class='@(Model.ContainerMode ? "container my-1" : "mb-1")'>
  <div id="carousel@(Model.ComponentId)" class='carousel slide @(Model.AnimationMode == SliderAnimationModeEnum.Fade ? "carousel-fade" : "" )' @(Model.AutoRun ? "data-ride=carousel" : "")>
    @if(Model.Indicators)
    {      
        <ol class="carousel-indicators">  
            @for(int i = 0; i < Model.CarouselItems.Count; i++)
            {
                <li data-target="#carousel@(Model.ComponentId)" data-slide-to="@i" @(i == 0 ? "class=active": "")></li>
            }
        </ol>
    }
    <div class="carousel-inner">
        @foreach((CarouselItem item, int i) in Model.CarouselItems.Select((value, i) => ( value, i )))
        {
            <div class='carousel-item @(i == 0 ? "active": "")' @(Model.PageInterval > 0 ? "data-interval="+Model.PageInterval : "")>
                <img src='@(item.Image.StartsWith("http") ? item.Image : (ViewBag.IsClientPreview == null) ? "images/" + item.Image : "/images/projects/"+Model.ProjectId + "/" + item.Image)' class="d-block w-100" />
                @if(Model.Captions)
                {
                    <div class="carousel-caption d-none d-md-block">
                        <h5>@item.Title</h5>
                        <p>@item.Description</p>
                    </div>
                }
            </div>
        }
    </div>
    
    @if(Model.Controls)
    {        
        <a class="carousel-control-prev" href="#carousel@(Model.ComponentId)" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Előző</span>
        </a>
        <a class="carousel-control-next" href="#carousel@(Model.ComponentId)" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Következő</span>
        </a>
    }
  </div>
</div>
<style>
    #carousel@(Model.ComponentId) .carousel-item{
        @(Model.HeightSize > 0 ? "height:" + @Model.HeightSize +" px !important;" : "")
        overflow: hidden !important;
    }
    #carousel@(Model.ComponentId) .carousel-caption {
        @(string.IsNullOrEmpty(Model.CaptionsTextBackgroundColor) ? "" : "background-color: "+ Model.CaptionsTextBackgroundColor + ";")
        @(string.IsNullOrEmpty(Model.CaptionsTextColor) ? "" : "color: "+ Model.CaptionsTextColor + ";")
    }
</style>