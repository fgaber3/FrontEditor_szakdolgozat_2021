@using FrontEditor.Client.Models.EditorModels
@model FrontEditor.Client.Models.EditorModels.EditorViewModel

<button type="button" class="btn btn-primary collapse-item m-2" onclick="addComponent()"><i
    class="fas fa-plus-circle"></i> Komponens hozzáadása</button>
<ul class="list-group">
  @{
    int idx = 0;
    foreach (EditorBaseViewModel block in Model.EditorData.Blocks)
    {
      <li class="list-group-item d-flex justify-content-between align-items-center">
        @(idx + 1). @block.ComponentName
        <div class="editor-list-actions">
          <button type="button" class="btn btn-primary mr-1" onclick="openComponentEditor(@(idx))"><i
            class="fas fa-edit"></i> <span>Szerkesztés</span></button>
          @if (block.GetType() != typeof(EditorHeaderViewModel) &&
      block.GetType() != typeof(EditorFooterViewModel))
          {
            <button type="button" class="btn btn-danger" onclick="deleteComponentItem(@(idx))"><i
            class="fas fa-trash-alt"></i> <span>Törlés</span></button>
            @if (idx > 1)
            {
              <button type="button" class="btn btn-primary mr-1" onclick="moveComponentItem(@(idx), false)"><i
            class="fas fa-arrow-up"></i> <span>Mozgatás fel</span></button>
            }
            @if (idx < Model.EditorData.Blocks.Count - 2)
            {
              <button type="button" class="btn btn-primary mr-1" onclick="moveComponentItem(@(idx), true)"><i
            class="fas fa-arrow-down"></i> <span>Mozgatás le</span></button>
            }
          }
        </div>
      </li>
      idx = idx + 1;
    }
  }
</ul>


<script>
  function addComponent() {
    let projectId = @(Model.ProjectData.ProjectId);
    $.ajax({
      type: "GET",
      url: "@Url.Action("AddComponent", "Editor")",
      data: { projectId: projectId },
      success: function (res) {
        $("#componentEditorModal .modal-content").html(res);
        $('#componentEditorModal').modal('show');
      }
    });
  }

  function openComponentEditor(idx) {
    let projectId = @(Model.ProjectData.ProjectId);
    $.ajax({
      type: "GET",
      url: "@Url.Action("EditComponent", "Editor")",
      data: { projectId: projectId, componentIndex: idx },
      success: function (res) {
        $("#componentEditorModal .modal-content").html(res);
        $('#componentEditorModal').modal('show');
      }
    });
  }

  function deleteComponentItem(idx) {
    removeComponentIndex = idx;
    $('#deleteComponentModal').modal('show');
  }

  function confirmDeleteComponent() {
    let projectId = @(Model.ProjectData.ProjectId);
    $.ajax({
      type: "POST",
      url: "@Url.Action("DeleteComponent", "Editor")",
      data: { projectId: projectId, componentIndex: removeComponentIndex },
      success: function (res) {
        if (res === "SUCCESS") {
          reloadContent();
          showMessage("Sikeres törlés", "<p class='text-success'>Komponens törlése sikeresen megtörtént!</p>");
        } else {
          showMessage("Hiba!", "<p class='text-danger'>Hiba a felhasználó törlése során!<br />" + res + "</p>");
        }
      }
    });
  }


  function moveComponentItem(idx, isDown) {
    if (isDown) {
      let projectId = @(Model.ProjectData.ProjectId);
      $.ajax({
        type: "POST",
        url: "@Url.Action("MoveDownComponent", "Editor")",
        data: { projectId: projectId, componentIndex: idx },
        success: function (res) {
          if (res === "SUCCESS") {
            reloadContent();
            showMessage("Sikeres mozgatás", "<p class='text-success'>Komponens mozgatása sikeresen megtörtént!</p>");
          } else {
            showMessage("Hiba!", "<p class='text-danger'>Hiba a komponens mozgatása során!<br />" + res + "</p>");
          }
        }
      });
    } else {
      let projectId = @(Model.ProjectData.ProjectId);
      $.ajax({
        type: "POST",
        url: "@Url.Action("MoveUpComponent", "Editor")",
        data: { projectId: projectId, componentIndex: idx },
        success: function (res) {
          if (res === "SUCCESS") {
            reloadContent();
            showMessage("Sikeres mozgatás", "<p class='text-success'>Komponens mozgatása sikeresen megtörtént!</p>");
          } else {
            showMessage("Hiba!", "<p class='text-danger'>Hiba a komponens mozgatása során!<br />" + res + "</p>");
          }
        }
      });
    }
  }
</script>
